name: Test

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.rst"

jobs:
  build_wheels:
    name: |-
      Build wheels on ${{ matrix.os }} with
      windows_cross_compile=${{ matrix.windows_cross_compile }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-15, ubuntu-24.04]
        windows_cross_compile: [false, true]
        exclude:
          - os: macos-15
            windows_cross_compile: true

    steps:
      - name: Install dependencies
        run: |-
          sudo apt-get update
          sudo apt-get install -y mingw-w64
        if: ${{ matrix.windows_cross_compile }}

      - uses: actions/checkout@v4

      - name: Build wheels
        run: bash build.sh
        env:
          WINDOWS_CROSS_COMPILE: ${{ matrix.windows_cross_compile }}

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
            name: artefacts-${{ matrix.os }}-${{ matrix.windows_cross_compile }}
            path: btrack/libs/*
            if-no-files-found: error

  test:
    needs: build_wheels
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest]
        include:
          - os: macos-15
            python-version: "3.11"
          - os: macos-latest
            python-version: "3.11"
          - os: windows-2019
            python-version: "3.11"
          - os: windows-latest
            python-version: "3.11"
          - os: ubuntu-24.04
            python-version: "3.11"

    steps:
      - uses: actions/checkout@v4

      - name: Download artefacts
        uses: actions/download-artifact@v4.1.7
        with:
            name: artefacts-${{ matrix.os }}-${{ matrix.windows_cross_compile }}
            path: btrack/libs

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      # these libraries enable testing on Qt on linux
      - uses: tlambert03/setup-qt-libs@v1

      - name: Install dependencies
        run: python -m pip install tox tox-gh-actions

      - name: Test with tox
        run: tox run
        env:
            OS: ${{ matrix.os }}

      - name: Coverage
        uses: codecov/codecov-action@v5
